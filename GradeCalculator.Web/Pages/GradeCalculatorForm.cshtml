@page
@model GradeCalculator.Web.Pages.GradeCalculatorForm

@{
    ViewData["Title"] = "Grade Calculator Form";
    List<Double> general_weighted_average = new();
}
<div class="col-md-12">
    <div class="form-group border p-3" style="margin-bottom:10px;">
        <p>
            <label class="col-sm-3 col-md-12 control-label text-primary border-bottom required">
                <b>Student Information</b>
            </label>
        </p>
        <div class="mb-1" id="personalInformation">
            <ul>
                <li>Name: <text>@Model.studentInformationModel.Name</text></li>
                <li>Level / Year: <text>@Model.studentInformationModel.LevelName</text></li>
                <li>Program: <text>@Model.studentInformationModel.ProgramName</text></li>
                <li>Term: <text>@Model.studentInformationModel.TermName</text></li>
                <li>General Weighted Average: <text>0.00</text></li>
            </ul>
        </div>
        
    </div>
</div>
<div class="row">
    @{
        foreach (var courseItem in Model.courseModel.GetCourse())
        {
            var CourseName = courseItem.CourseName;
            <div class="col-md-6">
                <form class="form-horizontal grade-form" id="gradeForm" method="post">
                    <div class="form-group border p-3" style="margin-bottom:10px;">
                        <p>
                            <label class="col-sm-3 col-md-12 control-label text-primary border-bottom required">
                                <b>@CourseName</b>
                            </label>
                        </p>
                        <div class="mb-1">
                            <table class="table">
                                <thead>
                                <tr class="table-active">
                                    <th scope="col">Prelims</th>
                                    <th scope="col">Midterms</th>
                                    <th scope="col">Pre-finals</th>
                                    <th scope="col">Finals</th>
                                </tr>
                                </thead>
                                <tbody>
                                <tr>
                                    <td>
                                        <div class="col-md-7">
                                            <input type="number" step=".01" class="form-control w-100" id="inputPrelims" name="inputPrelims">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="col-md-7">
                                            <input type="number" step=".01" class="form-control w-100" id="inputMidterms" name="inputMidterms">
                                        </div>
                                    </td>
                                    <td>
                                        <div class="col-md-7">
                                            <input type="number" step=".01" class="form-control w-100" id="inputPrefinals" name="inputPrefinals">
                                        </div>
                                    </td>
                                    <td>
                                        <div class=" col-md-7">
                                            <input type="number" step=".01" class="form-control w-100" id="inputFinals" name="inputFinals">
                                        </div>
                                    </td>
                                </tr>
                                </tbody>
                            </table>
                        </div>
                        <input type="hidden" name="studentName" value="@Model.studentInformationModel.Name">
                        <input type="hidden" name="courseName" value="@CourseName">
                        <label id="result">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </label>
                    </div>
                </form>
            </div>
        }
    }
</div>
<script>
    const forms = document.querySelectorAll('.grade-form');
    var GeneralWeightedAverage = [];
    forms.forEach(form => {
        form.addEventListener('submit', (e) => {
            e.preventDefault();

            const formData = new FormData(form);
            const url = '@Url.Page("GradeCalculatorForm", "CalculateFinalGrade")';

            fetch(url, {
                method: 'POST',
                body: formData,
            })
                .then(response => response.json())
                .then((data) => {
                    // Update the page dynamically with the response data
                    const resultElement = form.querySelector('#result');
                    resultElement.innerHTML = `<strong>Final Grade: ${data.finalGrade}</strong>`;
                    var final_grade = data.finalGrade;
                    GeneralWeightedAverage.push(final_grade);
                                        
                    console.log(data);

                    var average = GeneralWeightedAverage.reduce((a, b) => a + b, 0) / GeneralWeightedAverage.length;
                    const personalInformationElement = document.getElementById('personalInformation');
                    const ul = personalInformationElement.querySelector('ul');

                    for (let i = 0; i < ul.children.length; i++) {
                        switch (i) {
                            case 0:
                                ul.children[i].textContent = `Name: @Model.studentInformationModel.Name`;
                                break;
                            case 1:
                                ul.children[i].textContent = `Level / Year: @Model.studentInformationModel.LevelName`;
                                break;
                            case 2:
                                ul.children[i].textContent = `Program: @Model.studentInformationModel.ProgramName`;
                                break;
                            case 3:
                                ul.children[i].textContent = `Term: @Model.studentInformationModel.TermName`;
                                break;
                            case 4:
                                ul.children[i].textContent = `General Weighted Average: ${average}`;
                            default:
                        }
                    }
                })
                .catch((error) => {
                    console.error(error);
                });
        });
    });
</script>